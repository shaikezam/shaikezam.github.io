<hr>
<h2>Spring @Qualifier Annotation</h2>
<i>18-01-2022 - Shai Zambrovski</i>
<hr>
<div class="text">
    <h3>Why using @Qualifier?</h3>
    <p>Almost every <code>Java</code> developer knows the <code>Autowired</code> keyword (if not, you are in trouble ^_^
        ).</p>
    <p>But what if we have an interface in which two or more beans are implements it?</p>
    <p>Lets take the next example:</p>
    <p>We have a main class with a Program class that contains an IGenerator instance.</p>
    <p>The IGenerator has two implementations <code>KooGenerator</code> and <code>FooGenerator</code>:</p>
    <div id="qaulifier1">
        <script type="text/javascript">
            $(function () {
                postscribe('#qaulifier1', '<script src="https://gist.github.com/shaikezam/a75effc743b46f763996761609552aa9.js"><\/script>');
            });
        </script>
    </div>
    <p>Once we run the application we will get an exeption:
        <code>org.springframework.beans.factory.NoUniqueBeanDefinitionException</code>, tha's because Spring doesn't
        know which implementation to take.
    </p>
    <p>Let's take a look of our solutions:</p>
    <h3>Using @Qualifier with @Autowired</h3>
    <div id="qualifier2">
        <script type="text/javascript">
            $(function () {
                postscribe('#qualifier2', '<script src="https://gist.github.com/shaikezam/45eb92acb9935b6f4ce034bebf0ce33c.js"><\/script>');
            });
        </script>
    </div>
    <p>By using the name of the implementation in the @Qualifier annotation, we can tell which bean we want to use and
        to avoid the <code>NoUniqueBeanDefinitionException</code>.</p>
    <h3>Using @Primary</h3>
    <p>Spring also allow us to define a primary bean implementation to use, in case of multipe implementation.</p>
    <p>Need to remember that <code>@Qualifier</code> as bigger priority then <code>@Primary</code>, that's means that
        it's waste to define both of the annotations.</p>
    <p><code>@Primary</code> means default implementation, while <code>@Qualifier</code> is the specific implementation.
    </p>
    <div id="qualifier3">
        <script type="text/javascript">
            $(function () {
                postscribe('#qualifier3', '<script src="https://gist.github.com/shaikezam/0a31c6f54561022cc2e3fc64b77e1962.js"><\/script>');
            });
        </script>
    </div>
    <h3>Autowiring by Name</h3>
    <p>Another way to resolve the bean implementation is via the name of the bean.</p>
    <p>This is the default way.</p>
    <p>In this case, the <code>Program</code> will take the <code>kooGenerator</code> implementation as this is the bean
        name next to the <code>@Component</code>.</p>
    <div id="qualifier4">
        <script type="text/javascript">
            $(function () {
                postscribe('#qualifier4', '<script src="https://gist.github.com/shaikezam/8d4b1ec9f4ec1ee8bf679a2d70a4ced6.js"><\/script>');
            });
        </script>
    </div>
</div>